[project]
name = "adaptive-testing-backend"
version = "0.1.0"
description = "Backend for adaptive testing web application"
authors = [
    {name = "talberry",email = "52144102+talberry@users.noreply.github.com"}
]
license = "MIT"
readme = "../README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.2.6"
djangorestframework = "^3.16.1"
django-cors-headers = "^4.9.0"
psycopg2-binary = "^2.9.10"
python-decouple = "^3.8"
djangorestframework-simplejwt = "^5.5.1"
dj-database-url = "^3.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"
django-stubs = "^5.2.5"
djangorestframework-stubs = "^3.16.4"

[tool.poetry.group.test.dependencies]
pytest = "^8.4.2"
pytest-django = "^4.11.1"
factory-boy = "^3.3.3"
coverage = "^7.3.2"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "DJ", # flake8-django
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "DJ01",  # Django model requires __str__ method
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"*/migrations/*" = ["ALL"]  # Ignore all rules in migrations

[tool.ruff.isort]
known-first-party = ["adaptive_testing", "apps"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "adaptive_testing.settings.testing"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests"
]

[tool.coverage.run]
source = ["adaptive_testing", "apps"]
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/tests/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
disable_error_code = ["var-annotated"]

[[tool.mypy.overrides]]
module = "django.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "rest_framework.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "decouple.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "dj_database_url.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "apps.*.tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "apps.accounts.models"
disallow_untyped_defs = false

[tool.django-stubs]
django_settings_module = "adaptive_testing.settings"